<%- include("./parts/header.ejs")  %>  

   

<section class="mt-4">
    <div class="container">
		<p id="receiver_id" class="visually-hidden">
			<%= receiver._id  %> 
		</p>
        <h3 class="text-center">
            Messages (<%= receiver.name %> )
        </h3>
        
        <ul
			id="messages"
			class="
				list-unstyled
				w-75
				mx-auto
				d-flex
				flex-column
				align-items-start
				border border-light border-3
				p-2
				
			"
			style="max-height: 60vh; overflow: auto"
		>  

		<% for(let message of chats) {%> 

			<% if(user._id.equals(message.owner_id)) { %>  

			<li
				class="
					d-inline-block
					p-3
					border
					align-self-end
					border-2 border-primary
					my-2
				"
			>
				<p class="p-0 m-0"><%= message.message_text  %> </p>
			</li> 
			<% } else { %> 


			<li class="d-inline-block p-3 border border-2 border-success my-2">
				<p class="p-0 m-0"><%= message.message_text  %> </p>
			</li> 

			<% } %> 

		<% } %> 	
		</ul>
		<form id="message_form" class="w-75 mx-auto mb-5 " method="POST">
			<textarea
				id="text_area"
				name="message_text"
				class="form-control"
			></textarea>
			<button class="btn w-100 mt-2 btn-primary">Yuborish</button>
		</form>
         
</section> 

<script src="/socket.io/socket.io.js"></script>
<script>

	const socket = io(); 

	socket.emit("new_connection", {
		token: document.cookie.replace("token=", ""),
	})

 

	const form = document.querySelector("#message_form");
	const text = document.querySelector("#text_area")
	const messages = document.querySelector("#messages")
	const receiver_id = document.querySelector("#receiver_id").innerText;


	form.addEventListener("submit", async event => {
		event.preventDefault() 

		if(text.value.length >= 2) {
			let chat = await sendMessage(text.value);
			
			let element = `<li
				class="
					d-inline-block
					p-3
					border
					align-self-end
					border-2 border-primary
					my-2
				"
			>
				<p class="p-0 m-0">${text.value}</p>
			</li> ` ;

			messages.innerHTML += element;

			text.value = ""

			messages.scrollTop = messages.scrollHeight;

		}
		messages.scrollTop = messages.scrollHeight;  
	})



	async function sendMessage(message_text) {
		// let response = await fetch("", {
		// 	method: "POST",
		// 	headers: {
		// 		"Content-Type": "application/json",
		// 	},
		// 	body: JSON.stringify({
		// 		message_text: message_text
		// 	})  
		// })

		// response = await response.json()

		// return response;

		socket.emit("send_message", {
			message_text,
			receiver_id: receiver_id 
		})  
	}

	socket.on("new_message", (data) => {
			const element = `<li
				class="
					d-inline-block
					p-3
					border 
					border-2 border-success
					my-2
				"
			>
				<p class="p-0 m-0">${data}</p>
			</li> ` ;

			messages.innerHTML += element; 
			messages.scrollTop = messages.scrollHeight;
		})
</script>

<%- include("./parts/footer.ejs")  %> 